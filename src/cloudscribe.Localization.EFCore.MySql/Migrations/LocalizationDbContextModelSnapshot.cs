// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using cloudscribe.Localization.EFCore.MySql;

#nullable disable

namespace cloudscribe.Localization.EFCore.MySql.Migrations
{
    [DbContext(typeof(LocalizationDbContext))]
    partial class LocalizationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("cloudscribe.Localization.Models.Domain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cultures")
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("csl_LocalizationDomains", (string)null);
                });

            modelBuilder.Entity("cloudscribe.Localization.Models.Key", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ArgumentNames")
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<int>("DomainId")
                        .HasColumnType("int");

                    b.Property<string>("ForPath")
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext");

                    b.Property<string>("ValuesToReview")
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.HasKey("Id");

                    b.HasIndex("DomainId");

                    b.ToTable("csl_LocalizationKeys", (string)null);
                });

            modelBuilder.Entity("cloudscribe.Localization.Models.KeyValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Culture")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("KeyId")
                        .HasColumnType("int");

                    b.Property<bool>("Reviewed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("KeyId");

                    b.ToTable("csl_LocalizationKeyValue", (string)null);
                });

            modelBuilder.Entity("cloudscribe.Localization.Models.Query", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConnectionName")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<int>("DomainId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("Sql")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DomainId");

                    b.ToTable("csl_LocalizationQuery", (string)null);
                });

            modelBuilder.Entity("cloudscribe.Localization.Models.Key", b =>
                {
                    b.HasOne("cloudscribe.Localization.Models.Domain", "Domain")
                        .WithMany("Keys")
                        .HasForeignKey("DomainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Domain");
                });

            modelBuilder.Entity("cloudscribe.Localization.Models.KeyValue", b =>
                {
                    b.HasOne("cloudscribe.Localization.Models.Key", "Key")
                        .WithMany("Values")
                        .HasForeignKey("KeyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Key");
                });

            modelBuilder.Entity("cloudscribe.Localization.Models.Query", b =>
                {
                    b.HasOne("cloudscribe.Localization.Models.Domain", "Domain")
                        .WithMany("Queries")
                        .HasForeignKey("DomainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Domain");
                });

            modelBuilder.Entity("cloudscribe.Localization.Models.Domain", b =>
                {
                    b.Navigation("Keys");

                    b.Navigation("Queries");
                });

            modelBuilder.Entity("cloudscribe.Localization.Models.Key", b =>
                {
                    b.Navigation("Values");
                });
#pragma warning restore 612, 618
        }
    }
}
